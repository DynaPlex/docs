Installation instructions
=========================

Prerequisites
-------------

We assume that you already have installed a C++ IDE and if you want to run locally, a local version of LibTorch. You also need CMake (version >=3.21). Most IDEs (e.g., Visual Studio) are supplied with CMake, if you install the right plugins.

Setup
-----

For the easiest setup, provide a ``CMakeUserPresets.json`` in the root directory. Note: ``CMakeUserPresets.json`` in the root directory is ignored by Git. This allows for passing in specific configurations and paths tailored to your local environment. An example file can be found at ``cmake/resources/``. You could copy this to the root directory, and adapt it to your specific needs.

.. hint::
    Visual Studio and other IDEs often hide files and folders that are ignored in Git, in settings you can set ignored files to visible.

The ``CMakeUserPresets.json`` should provide paths to certain dependencies (e.g., ``PyTorch``). You also need to provide ``DYNAPLEX_IO_ROOT_DIR``, which is a local directory where input and output files used and generated by DynaPlex will be stored and retrieved from.

Windows
-------

With the setup in place, compiling the library should be straightforward in most IDEs that support CMake (possibly via a proper extension).

For using the python bindings, we recommend setting up a specific conda environment using ``python/environment.yml``.

After this, update the ``CMakeUserPresets.txt`` for WinPB to point to the relevant dependencies inside the newly created environment. Compiling WinPB afterwards will result in the bindings being compiled. CMake automatically copies them to ``python/dp/libs``, where ``python/dp/load.py`` should be able to locate them. As a consequence, the scripts in ``python/test`` should run them.

Linux/Snellius
--------------

**1. Initialize Environment and Load Modules (Only on Snellius):**

   .. code-block:: bash

      cd bash
      source loadmodules.sh
      cd .. #back to root

**2. Build:**

   - For a specific preset from CMake user presets (e.g., `LinRel`):

     .. code-block:: bash

        cmake --preset=LinRel  # Other options: LinDeb/ LinDB

   - Compile:

     .. code-block:: bash

        cmake --build out/LinRel -- -j12

     Note: The option ``-- -j12`` instructs to parallelize the build.

   - If you encounter the error:

     .. code-block:: text

        CMake Error: Could not read presets from /home/willemvj/DynaPlexPrivate: Unrecognized "version" field

     Your CMake version is not recent enough. On Snellius, you may have forgotten to ``source loadmodules.sh`` to bring the recent CMake version into scope.

   - Compile a specific target (e.g., ``sometarget``) that is not included in all:

     .. code-block:: bash

        cmake --build out/LinRel --target sometarget -j12

**3. Run:**
    - Executables may be run from a compute node, that can be obtained as follows:

     .. code-block:: bash
    
        srun -p genoa -c 192 -n 1 -t 00:59:00 --pty /bin/bash
    
    also use srun to then do something on that node.
